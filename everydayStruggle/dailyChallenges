// // February 5th, 2020
//
//  // Morning Challenge: Create a function that takes in three arguments.
// // If the product of said arguments is a multiple of 24,
// // convert the product to a string and then print that string x times
// // to the console where x is the last argument given
// // PREP
// // Parameters: coming into the function. three numbers.
// // Return: printed string and printed where x is the last arguement
// // Example: 4,3,4 gives us 48. 48 is a multiple of 24. "forever kobe" should print
// // 4 times based on the arguement. repeat(num3)
// // (x) take input num1 num2 num3
// // (x) multiply num1-3
// // (x) check if the product is divisible by 24
// // (x) print "foreverKobe" num3 times string.repeat(num3)
//
// var num1=1
// var num2=1
// var num3=24
//
//   function product(num1,num2,num3){
//     var checkMultiple = num1*num2*num3
//       if (checkMultiple % 24 === 0){
//         num3str = num3.toString()
//         console.log("24")
//         //  num3str.repeat(num3)
//           // or ${num3}
//         } else {
//         console.log("Not a mulitple ")
//   }
// }
//
//   // Leon's Solution
//   function threeAndDoesStuff(num1,num2,num3)
//     var product= num1*num2*num3
//     if (product % 24 === 0){
//       product = product.toString()
//       for (var count = 1; count <=num3; count ++){
//         console.log(product)}
//         else {
//           console.log('not a multi')
//         }
//       }
// // // Create a function that takes in 5 arguments. If the first argument is even multiply the numbers.
// // If the first argument is odd, add all the numbers. If the result is over 300, print the result to
// //  the console x times where x is the 3rd argument. If the result is under 300, print the result to
// //   the console x times where x is the 4th argument.
// // P Parameters are the 5 different number/arguments
// // R Return print the result, 3rd number times OR print the result, 4th number times
// // E Example
// // (x) take in five numbers
// // (x) check is the first number is even or odd
// // (x) if its odd, add all the five numbers /////// if its even, multiply all five numbers
// // (x) check if the result is over or under 300
// // (x) if over 300, print the result, 3rd argument # of times. ///// if under 300, print result 4th arguement of times
// function damn (a,b,c,d,e){
//   var sum= a+b+c+d+e
// }
//
//
// if (a % 2 === 0){
//   product= a*b*c*d*e;
// } else if {
//   superSum= a+b+c+d+e;
// }
// if (product || sum < 300){
//   console.log(product.repeat(d))
//   console.log(sum.repeat(d))
// }
// else {
//   console.log(product.repeat(c))
//   console.log(sum.repeat(c))
// };
//
// function damn2(a,b,c,d,e)
//   var sum=a+b+c+d+e;
//   var product= a*b*c*d*e;
//
// if (product || sum < 300){
//   for(var count=1; count <=d; count++){
//
//   }
//
//   if (product || sum < 300){
//     console.log(product.repeat(d))
//     console.log(sum.repeat(d))
//   }
//   else {
//     console.log(product.repeat(c))
//     console.log(sum.repeat(c))
//
//
//
//     if (product % 24 === 0){
//       product = product.toString()
//       for (var count = 1; count <=num3; count ++){
//         console.log(product)}
//         else {
//           console.log('not a multi')
//         }
//       }
// Leon's Solution
// Create a functions
  // If the first argument is even multiply the numbers
  // If the first arguement is odd add the numbers
    // If over 300 print 3rd times if under 300 print 4th times

    // function doWithFive(n1,n2,n3,n4,n5)
    //
    // var num = 0;
    // if (n1 % 2 === 0){
    //   num = n1*n2*n3*n4*n5}
    //   else{
    //     num = n1+n2+n3+n4+n5
    //   }
    //  else if (num > 300){
    //   for(var i=0; i<n3,i++){
    //     console.log(num)
    //   }
    //   else if (num > 300){
    //    for(var j=0; j<n4,j++){
    //      console.log(num)}
    //   else if (num=300){
    //     console.log("This equals 300 !")
    //   }
    //
    // }
    // }
// February 6 2020
// Variables
// Create a variable, reassign the value, add the value to the dom
// Create a variable, multiply it by itself, replace a number in the dom with the new number from the multiplication
// Functions
// Create a function that takes in one argument. That argument should be a Fahrenheit value to be converted to Celcius. Console log the converted value
// Create a function takes in two arguments. Create a function that takes in one argument and alerts that value. Call the second function with an argument that is the sum from the original two argument function.
// Conditionals
// Create a function that choses a random throw of rock, paper, scissors, lizard, spock and alerts the random choice
// Create a function that takes in two numbers. If the second number is divisible by the first, alert the product of those two numbers. If not, alert the sum of those two numbers.
// Loops
// Redo FIZZBUZZ with your own rules
// Print a pyramid to the console where the base of the pyramid is a number passed into a function


// var num = 2
// num = 5
// document.querySelector("span").innerHTML = num
// var num = 10
// num = num * num
// document.querySelector("span").innerHTML = num
// var students = ["bob","zebra","catdog"]
// function randomThrow(){
//   var randomNum = Math.floor( Math.random() * students.length )
//   alert( students[randomNum] )
//
//   var randomNum = Math.random()
//   if ( randomNum < .2 ){
//     alert("rock")
//   }else if ( randomNum < .4 ){
//     alert("paper")
//   }else if ( randomNum < .6 ){
//     alert("scissors")
//   }else if ( randomNum < .8 ){
//     alert("lizard")
//   }else{
//     alert("spock")
//   }
// }
// randomThrow()
// function convert(fahrenheitValue){
//   var celciusVal = (fahrenheitValue - 32) * (5/9)
//   console.log(celciusVal);
// }
// convert(212)
// convert(32)
// convert(-41)
// function addTwo(num1, num2){
//   var sum = num1 + num2
//   alertForMe(sum)
// }
// function alertForMe(x){
//   alert(x)
// }
//
// addTwo(2,3)
// function takeTwoAndAlert(num1, num2){
//
//   if ( num1 % num2 === 0 ){
//     var product = num1 * num2
//     alert(product)
//   }else{
//     var sum = num1 + num2
//     alert(sum)
//   }
//
// }
// takeTwoAndAlert(8,2)
// takeTwoAndAlert(7,3)
//function that prints numbers 1 to X
// function printToX(x){
//   for(var count = 1; count <= x; count+=1){
//    console.log(count);
//   }
// }
// printToX(5)

// Febraury 7 2020
// channel Morning Challenge:
// Create a function that takes in two numbers - number of dice and the number of sides each die has in total. Console log the results of a random roll for each die. Example, if the user enters 3,6 you would see in the console:
// 2
// 5
// 4

// function diceGame(numOfDice, numOfSides){
//   var randomNum = 6*(Math.floor(Math.random()))
// }
//Create three boxes in your HTML / CSS
//Click on a box and have it rotate (45+ degrees each click)
//On the third click of each box change the color of the other two boxes
//On a click of a box, turn that box into a circle and have it move to the right
// //Pseudo Code and Wireframes:Build a simple slot machine with minimum 5 items per
// reel and 3 reels - user should be able to bet min or max and have their total update
// aka how much money they have won or lost. Min bet does $5 and Max bet does $50.
// They should start with $1000. Matches of the three wheels = a win just like a normal
// slot machine and they win 10x their bet

    Feb 13, 2020
  // Morning Challenge:
  // Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
  // 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
// Parameters two numbers
// Return term and sum of even value terms
// Example 1+2=3 nothing
//         2+3=5 nothing
//         13+21= 34 term 34
// //         under 4 million 2+8+34
// // Psuedo code:
//   (x) get previous terms
//   (x) add previous terms
//   (x) check if term is even
//   (x) add the terms that are even
  //
  // function fibSeq(a,b){
  //   fibSeqterm = a+b;
  //   // a=1 b=2 fs=3
  //     // b=2 fs=a=3 fs= 5
  //     //
  // }
  // function sumFibonacci(){ //function and name of function
  //     return fibSeriesEven().reduce(function(total, item) {
  // // The return statement stops the execution of a function and returns a value from that function.
  //         return total += item;
  // // The reduce() method reduces the array to a single value
  // //The return value of the function is stored in an accumulator (result/total)
  // // Note: reduce() does not execute the function for array elements without values
  //     }, 0);
  // }
  // function fibSeriesEven() {
  //     var a = 1; //use the first two numbers to prove your point
  //     var b = 2; //and here are the examples, bc b is going to be the new number
  //     var next = a + b;
  //     var fibonacciArray = [2];
  // //this is from your prep div
  //     //sum = num1 + num2        a = b+2 b2=fs3, fs2=5
  //     //num1 = num2              a = b2 =3 and b = fs25 and fs3=8
  //     //num 2 = sum              therefore 8 = 8
  //     while(next < 4000000){ //use while bc its more dynamic than for, you dont have to say what it goes but for you would have to say the starting and ending point and while is all it cares about is the conditional taught by Gus a few days ago
  //         if(next % 2 === 0){
  //             fibonacciArray.push(next);
  // // Javascript array push() an inbuilt function that adds a new element to the end of an array and returns the new length of an array.
  // // The push() method changes the length of the array or collection. If you want to add items at the beginning of an array, then use the Javascript unshift() method.
  //         }
  //         a = b;
  //         b = next;
  //         next = a + b;
  //     }
  //     return fibonacciArray;
  // }
  // console.log(sumFibonacci(4e6))
